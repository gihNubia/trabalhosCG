#include <GL/glew.h>
#include <GL/freeglut.h>

struct pontoNave{
    int x;
    int y;
};

struct pontoNave posNave;


void desenhaMinhaCena() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0, 1, 0);

    glBegin(GL_POLYGON);
        glVertex3f(posNave.x-5, posNave.y-5, 0); //baixo direito
        glVertex3f(posNave.x-5, posNave.y+5, 0); //cima direito
        glVertex3f(posNave.x+5, posNave.y+5, 0); //cima esquerdo
        glVertex3f(posNave.x+5, posNave.y-5, 0); //baixo esquerdo
    glEnd();

    glutSwapBuffers();
    //glFlush();
}

void inicializa() {
    glClearColor(1, 1, 1, 1); // branco
    posNave.x = 50;
    posNave.y = 5;
}

void redimensionada(int width, int height) {
   glViewport(0, 0, width, height);

   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   glOrtho(0, 100, 0, 100, -1, 1);

   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
}

void teclaPressionada(unsigned char key, int x, int y) {
    switch(key) {
    case 27:
        exit(0);
        break;
    case 100:  //seta direita
        posNave.x+=5;
        //tratar para quando as coordenadas ultrapassarem o gortho
        desenhaMinhaCena();
        break;
    case 97: //seta esquerda
        //tratar para quando as coordenadas ultrapassarem o gortho
        posNave.x-=5;
        desenhaMinhaCena();
        break;

    default:
        break;
    }
    //glutPostRedisplay();
}

int main(int argc, char** argv) {
   glutInit(&argc, argv);

   glutInitContextVersion(1, 1);
   glutInitContextProfile(GLUT_COMPATIBILITY_PROFILE);

   glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);
   glutInitWindowSize(500, 500);
   glutInitWindowPosition(100, 100);

   glutCreateWindow("Movimentacao Horizontal");

   glutDisplayFunc(desenhaMinhaCena);
   glutReshapeFunc(redimensionada);
   glutKeyboardFunc(teclaPressionada);

   inicializa();

   glutMainLoop();
   return 0;
}
